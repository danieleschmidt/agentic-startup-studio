[tool.poetry]
name = "dittofeed-self-hosted" # From existing [project]
version = "0.1.0" # From existing [project]
description = "Configuration for self-hosting Dittofeed." # From existing [project]
authors = ["Your Name <you@example.com>"] # Placeholder
readme = "README.md" # From existing [project]
packages = [] # No specific packages to include as a library for now

[tool.poetry.dependencies]
python = ">=3.11"
langgraph = "^0.3"
pydantic = "^2.0"
sqlmodel = "^0.0.19"
psycopg2-binary = "^2.9.9"
redis = "^5.0"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
click = "^8.1"
pyyaml = "^6.0"
fastapi = "^0.110.0"
uvicorn = "^0.29.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.0"
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pre-commit = "^3.7.0"
mypy = "^1.9.0"
types-pyyaml = "^6.0"
types-redis = "^4.6.0"
types-requests = "^2.31.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Set a line length.
line-length = 88 # Default for Black, a common formatter

[tool.ruff.lint]
# Enable Pyflakes (F) and pycodestyle (E) rules by default.
# Consider adding more rule sets like "W" (pycodestyle warnings), "I" (isort) later.
select = ["E", "F"]

# Specify files/directories to lint (current directory).
# Ruff automatically discovers Python files.
# You can also specify extend-exclude to ignore certain directories further.
# extend-exclude = [
#     "docs/",
#     "some_generated_code/",
# ]

# Example: Ignore a specific rule if needed (e.g., E501 line too long if not auto-formatting)
# ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F401"] # Ignore unused import (pytest) in test files

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q" # Basic options: report all except passes, quiet
testpaths = [
    "tests",
    # "integration", # If you have integration tests in a separate folder
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# If you need to set environment variables for tests:
# env = [
#     "MY_VARIABLE=my_value"
# ]
