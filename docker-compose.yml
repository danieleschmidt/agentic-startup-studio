version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: dittofeed
      POSTGRES_USER: dittofeed
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  posthog:
    image: posthog/posthog:latest
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: dittofeed
      POSTGRES_USER: dittofeed
      POSTGRES_PASSWORD: password
      REDIS_HOST: redis
    volumes:
      - posthog_data:/var/lib/posthog
    depends_on:
      - postgres
      - redis

  dittofeed:
    image: dittofeed/dittofeed-ce:latest
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://dittofeed:password@postgres:5432/dittofeed
      REDIS_URL: redis://redis:6379
      CLICKHOUSE_HOST: posthog
      CLICKHOUSE_DATABASE: dittofeed
      CLICKHOUSE_USERNAME: ""
      CLICKHOUSE_PASSWORD: ""
      POSTHOG_API_KEY: "" # Needs to be set by user
      POSTHOG_PROJECT_ID: "" # Needs to be set by user
    depends_on:
      - postgres
      - redis
      - posthog
version: "3.9"   # modern Compose spec

services:
  # ───────────────────── core datastores ─────────────────────
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data          # durable task / event queues

  pgvector:
    image: pgvector/pgvector:pg16     # Postgres 16 + pgvector extension
    restart: unless-stopped
    environment:
      POSTGRES_DB: studio
      POSTGRES_USER: studio
      POSTGRES_PASSWORD: studio
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  # ───────────────────── analytics (PostHog) ──────────────────
  posthog-clickhouse:
    image: clickhouse/clickhouse-server:23
    restart: unless-stopped
    volumes:
      - chdata:/var/lib/clickhouse

  posthog:
    image: posthog/posthog:latest
    restart: unless-stopped
    depends_on: [pgvector, redis, posthog-clickhouse]
    ports: ["8000:8000"]
    environment:
      DATABASE_URL: postgres://studio:studio@pgvector:5432/studio
      SECRET_KEY: changeme              # replace in production
      CLICKHOUSE_HOST: posthog-clickhouse
      REDIS_HOST: redis
      SITE_URL: http://localhost:8000
    volumes:
      - posthog_data:/var/lib/posthog

  # ───────────────────── customer engagement (Dittofeed) ─────
  dittofeed:
    image: ghcr.io/dittofeed/dittofeed:latest
    restart: unless-stopped
    depends_on: [pgvector, redis, posthog]
    ports: ["9000:8080"]               # 8080 inside → 9000 outside
    environment:
      DATABASE_URL: postgres://studio:studio@pgvector:5432/studio
      REDIS_URL: redis://redis:6379
      POSTHOG_API_KEY: "${POSTHOG_API_KEY}"      # set in .env
      POSTHOG_PROJECT_ID: "${POSTHOG_PROJECT_ID}"
    volumes:
      - dittofeed_data:/app/data

volumes:
  redis_data:
  postgres_data:
  pgdata:
  chdata:
  posthog_data:
  dittofeed_data:
