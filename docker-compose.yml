version: '3.9'
services:
  # ───────────────────── core datastores ─────────────────────
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    env_file: .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data          # durable task / event queues
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128m

  pgvector:
    image: pgvector/pgvector:pg16     # Postgres 16 + pgvector extension
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m

  # ───────────────────── analytics (PostHog) ──────────────────
  posthog-clickhouse:
    image: clickhouse/clickhouse-server:23
    restart: unless-stopped
    env_file: .env
    volumes:
      - chdata:/var/lib/clickhouse
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m

  posthog:
    image: posthog/posthog:latest
    restart: unless-stopped
    env_file: .env
    depends_on: [pgvector, redis, posthog-clickhouse]
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${POSTHOG_DATABASE_URL}
      SECRET_KEY: ${POSTHOG_SECRET_KEY}
      CLICKHOUSE_HOST: posthog-clickhouse
      REDIS_HOST: redis
      SITE_URL: http://localhost:8000
    volumes:
      - posthog_data:/var/lib/posthog
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g

  # ───────────────────── customer engagement (Dittofeed) ─────
  dittofeed:
    image: ghcr.io/dittofeed/dittofeed:latest
    restart: unless-stopped
    env_file: .env
    depends_on: [pgvector, redis, posthog]
    ports:
      - "9000:8080"               # 8080 inside → 9000 outside
    environment:
      DATABASE_URL: ${DITTO_DATABASE_URL}
      REDIS_URL: redis://redis:6379
      POSTHOG_API_KEY: "${POSTHOG_API_KEY}"
      POSTHOG_PROJECT_ID: "${POSTHOG_PROJECT_ID}"
    volumes:
      - dittofeed_data:/app/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m

  # ───────────────────── observability stack ─────────────────
  prometheus:
    image: prom/prometheus:v2.45.0
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m

  grafana:
    image: grafana/grafana:10.0.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m

  alertmanager:
    image: prom/alertmanager:v0.25.0
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128m

volumes:
  redis_data:
  pgdata:
  chdata:
  posthog_data:
  dittofeed_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:
